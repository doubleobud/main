# AI‑Context Sync (Git‑safe) — Post‑Commit Mirror to Google Drive

> **Goal:** Keep your real Git repo **outside** Google Drive, but automatically **mirror** its working files (not `.git`) into a folder **inside My Drive** after every commit. This gives GPT access to current files without risking your repo internals.

---

## What you’ll set up

- A **destination folder** in Google **My Drive** (e.g., `My Drive/AI-Context/<your-project>`).
- A one‑line **mirror command**:
  - **Windows:** `robocopy`  
  - **macOS:** `rsync`
- A Git **post‑commit hook** that runs the mirror command after every commit.

> You can also run the same command manually any time you want an immediate refresh.

---

## Before you start (1–2 mins)

1. **Install Google Drive for desktop** and sign in.  
   - Confirm you can open your local **My Drive** folder:
     - Windows: typically `C:\Users\<you>\My Drive\`
     - macOS: `/Volumes/GoogleDrive/My Drive/`
2. Decide a simple destination path, for example:
   - Windows: `C:\Users\<you>\My Drive\AI-Context\your-project\`
   - macOS: `/Volumes/GoogleDrive/My Drive/AI-Context/your-project/`

Create the folder if it doesn’t exist yet.

---

## Step A — Pick your source and destination

- **SOURCE (your real repo):**  
  Example (Windows) `C:\Dev\your-repo\`  
  Example (macOS) `/Users/<you>/Dev/your-repo/`

- **DESTINATION (inside My Drive):**  
  Example (Windows) `C:\Users\<you>\My Drive\AI-Context\your-project\`  
  Example (macOS) `/Volumes/GoogleDrive/My Drive/AI-Context/your-project/`

> Keep the trailing slash on macOS paths in the examples — it tells `rsync` to copy contents, not the parent folder itself.

---

## Step B — One‑line mirror commands

### Windows (PowerShell/Command Prompt)
> Mirrors SOURCE → DESTINATION, skipping heavy/internal folders and logs.

```bat
robocopy "C:\Dev\your-repo" "C:\Users\<you>\My Drive\AI-Context\your-project" /MIR /XD .git node_modules .venv .mypy_cache .pytest_cache .idea .vscode /XF *.log
```

**Flags explained (short):**
- `/MIR` — make destination match source (add/update/delete)
- `/XD` — exclude directories
- `/XF` — exclude files by pattern

---

### macOS
> Mirrors SOURCE → DESTINATION, skipping heavy/internal folders and logs.

```bash
rsync -a --delete   --exclude ".git"   --exclude "node_modules"   --exclude ".venv"   --exclude ".mypy_cache"   --exclude ".pytest_cache"   --exclude ".idea"   --exclude ".vscode"   --exclude "*.log"   "/Users/<you>/Dev/your-repo/" "/Volumes/GoogleDrive/My Drive/AI-Context/your-project/"
```

**Flags explained (short):**
- `-a` — archive mode (preserves timestamps/permissions; copies recursively)
- `--delete` — removes files at destination that were deleted at source

> Test the command once manually. You should see the destination fill up, and the Google Drive tray/app should show it syncing.

---

## Step C — Install a Git post‑commit hook (auto‑sync after each commit)

1. In your repo, open the hooks folder:  
   `<repo>/.git/hooks/`
2. Create a file named `post-commit` (no extension on macOS/Linux; `.cmd` works well on Windows).

### Windows `post-commit` (using `robocopy`)

Create `<repo>/.git/hooks/post-commit` with this content:

```bat
@echo off
REM === Post-commit mirror to Google Drive (Windows) ===
REM Adjust the paths below to your setup.

set SOURCE=C:\Dev\your-repo
set DEST=C:\Users\<you>\My Drive\AI-Context\your-project

robocopy "%SOURCE%" "%DEST%" /MIR /XD .git node_modules .venv .mypy_cache .pytest_cache .idea .vscode /XF *.log

REM Optional: log the run
REM echo %DATE% %TIME% >> "%DEST%\_mirror.log"
```

That’s it — Windows `.cmd` files are executable by default in hooks.

---

### macOS `post-commit` (using `rsync`)

Create `<repo>/.git/hooks/post-commit` with this content:

```sh
#!/bin/sh
# === Post-commit mirror to Google Drive (macOS) ===
# Adjust the paths below to your setup.

SOURCE="/Users/<you>/Dev/your-repo/"
DEST="/Volumes/GoogleDrive/My Drive/AI-Context/your-project/"

/usr/bin/rsync -a --delete   --exclude ".git"   --exclude "node_modules"   --exclude ".venv"   --exclude ".mypy_cache"   --exclude ".pytest_cache"   --exclude ".idea"   --exclude ".vscode"   --exclude "*.log"   "$SOURCE" "$DEST"
```

Then make it executable:

```bash
chmod +x .git/hooks/post-commit
```

> Now every `git commit` will trigger a mirror to `My Drive/AI-Context/your-project`.

---

## Verify it works (1 minute)

1. Make a tiny change in your repo (e.g., edit `README.md`), then:
   ```bash
   git add .
   git commit -m "Test mirror"
   ```
2. Watch Google Drive start syncing.  
3. Check **drive.google.com → My Drive → AI-Context → your-project** — your files should be there and up to date.

---

## Tips & troubleshooting

- **Long filenames or UNC paths (Windows):** If you hit path‑length issues, enable long paths in Windows or shorten nested folders.
- **File locks:** If a tool keeps files open, the mirror may skip them. Close editors or re‑run the command.
- **Large folders (e.g., `node_modules`):** They’re excluded by default. Remove from exclusions only if you truly need them in GPT.
- **Multiple projects:** Create one subfolder per project under `AI-Context` and add the same hook (with paths adjusted) in each repo.
- **Manual refresh anytime:** Run the same `robocopy`/`rsync` command manually to force a sync outside of commits.
- **Disable temporarily:** Rename the hook to `post-commit.disabled` (or remove the execute bit on macOS).

---

## Why this is “Git‑safe”

- Your real repo stays **outside** Google Drive, so Drive never touches `.git` or temp files.
- GPT sees a **clean working copy** under `My Drive/AI-Context/...`.
- You control exactly **what** gets mirrored (via excludes) and **when** (on commit).

---

## Minimal checklist (copy/paste)

- [ ] Create destination folder in **My Drive**: `AI-Context/your-project/`
- [ ] Test the one‑line mirror (`robocopy` on Windows or `rsync` on macOS)
- [ ] Create `.git/hooks/post-commit` with the mirror command
- [ ] (macOS) `chmod +x .git/hooks/post-commit`
- [ ] Make a test commit and confirm files appear in `AI-Context/your-project`
- [ ] Use the Drive picker in GPT to select files from that folder

---

### Optional: run on a schedule (if you want time‑based sync)
- **Windows:** Task Scheduler → New Task → Trigger “At log on” or every N minutes → Action runs the `robocopy` command.
- **macOS:** Create a LaunchAgent `.plist` that runs the `rsync` periodically.

---

**You’re done.** You now have a hands‑free, Git‑safe flow: every commit mirrors your working files to My Drive for GPT to use.
